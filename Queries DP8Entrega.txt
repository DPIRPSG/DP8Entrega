Queries DP8Entrega

Level C:

1) The most popular gym/s. -> TERMINADA

- select g1 from Gym g1 left join g1.feePayment f1 where f1.activeMoment < CURRENT_DATE AND f1.inactiveMoment > CURRENT_DATE group by g1 having count(f1.activeMoment) >= all(select count(f2.activeMoment) from Gym g2 left join g2.feePayment f2 where f2.activeMoment < CURRENT_DATE AND f2.inactiveMoment > CURRENT_DATE group by g2);

2) The least popular gyms/s. -> POR TERMINAR: Los gyms sin feePayment activos no salen.

- select g1 from Gym g1 join g1.feePayment f1 where f1.activeMoment < CURRENT_DATE AND f1.inactiveMoment > CURRENT_DATE group by g1 having count(f1.activeMoment) <= all(select count(f2.activeMoment) from Gym g2 join g2.feePayment f2 where f2.activeMoment < CURRENT_DATE AND f2.inactiveMoment > CURRENT_DATE group by g2); -> Los gyms sin feePayment activos no salen.

- select g, count(f) from Gym g left join g.feePayment f group by g; -> Query de prueba

3) The most popular service/s. -> TERMINADA

- select s from ServiceEntity s left join s.bookings b group by s having count(b) >= all(select count(b) from ServiceEntity s left join s.bookings b group by s);

4) The least popular service/s. -> TERMINADA

- select s from ServiceEntity s left join s.bookings b group by s having count(b) <= all(select count(b) from ServiceEntity s left join s.bookings b group by s);

5) The customer/s who has/have paid more fees. -> TERMINADA

- select c from Customer c left join c.feePayment f group by c having count(f) >= all(select count(f) from Customer c left join c.feePayment f group by c);

6) The customer/s who has/have paid less fees. -> TERMINADA

- select c from Customer c left join c.feePayment f group by c having count(f) <= all(select count(f) from Customer c left join c.feePayment f group by c);

==========

Level B:

7) The actor/s who sends/send more spam messages. -> POR TERMINAR: Está en alpha. Tiene que salir “Mónica”

- select a.name, count(b) from Actor a left join a.messageBoxes b where b.name = 'SpamBox' group by a;

- select f.name, count(m), f.actor.name from Folder f left join f.messages m where f.name = 'SpamBox' group by f;

8) The average number of messages in an actor’s message boxes.

- 

==========

Level A:

9) The gyms/s that has/have more comments.

- 

10) The service/s that has/have more comments.

- 

11) The average number of comments written by the actors, including thestandard deviation.

- 

12) The average number of comments per gym.

- 

13) The average number of comments per service.

- 

14) The customer/s who has/have been removed more comments.

- 